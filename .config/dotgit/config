# Dotfiles-specific config
[dotfiles]
    lockFiles = yes
    matchThreshold = 10

# Push/pull behaviour
[push]
    default = matching
    recurseSubmodules = on-demand
[pull]
    rebase = true
[rebase]
    autoStash = true

# Track origin/master
[branch "master"]
    remote = origin
    merge  = refs/heads/master

[alias]
    # convenient aliases
    files  = "!git i-files"
    lock   = "!git i-filept \"$@\" | sudo xargs chattr +i #"
    unlock = "!git i-filept \"$@\" | sudo xargs chattr -i #"
    edit   = "!git i-edit $(git i-filept \"$@\") #"

    profiles = profile ls
    pf       = profile

    # internals
    i-cfg     = "!git --git-dir=\"$GIT_DIR\" "

    i-sudo    = "!cmd=\"$1\"; shift; "                      \
                "sudo -E git "                              \
                "   --git-dir=\"$GIT_DIR\" "                \
                "   \"$cmd\" \"$@\" #"

    i-pattern = "!printf ' -e \\|%s|!d ' \"$@\" "           \
                "  | sed -E -e 's/^\\s*//' -e 's/\\s*$//' #"

    i-splitl  = "!export IFS=\"$(printf '\\n\\r')\"; echo \"$*\" #"

    i-files   = "!if test $# -eq 0; then "                                      \
                "  lsf='i-cfg ls-files'; "                                      \
                "else "                                                         \
                "  lsf='i-cfg ls-files | sed -E $(git i-pattern \"$@\")'; "     \
                "fi; "                                                          \
                "cmd=\"( \"; "                                                  \
                "if [ ! -f \"$GIT_DIR\"/commondir ]; then "                     \
                "   for p in $(git profiles); do "                              \
                "     cmd=\"${cmd}git profile $p $lsf; \";"                     \
                "   done; "                                                     \
                "else "                                                         \
                "   cmd=\"( git $lsf; \"; "                                     \
                "fi; "                                                          \
                "cmd=\"${cmd}\"')';"                                            \
                "fmt='$(stat --format \"%A %N\" \"@\" | cut -c 2- )'; "         \
                "if [ \"$(git config dotfiles.lockFiles)\" = yes ]; then "      \
                "  fmt='$( (lsattr -d \"@\" 2>/dev/null "                       \
                "           || echo '----l') | cut -c 5)'\"$fmt\"; "            \
                "fi; "                                                          \
                "cd \"$(git rev-parse --show-toplevel)\"; "                     \
                "eval $cmd | sort | xargs -I@ sh -c \"echo $fmt\"; #"


    i-filept  = "!worktree=\"$(git rev-parse --show-toplevel)\"; "              \
                "if test $# -eq 0; then "                                       \
                "  lsf='i-cfg ls-files "                                        \
                "    | sed -e \"s|^|$worktree/|g\"'; "                          \
                "else "                                                         \
                "  lsf='i-cfg ls-files "                                        \
                "    | sed $(git i-pattern \"$@\") "                            \
                "    | sed -e \"s|^|$worktree/|g\"'; "                          \
                "fi; "                                                          \
                "cmd=\"( \"; "                                                  \
                "if [ ! -f \"$GIT_DIR\"/commondir ]; then "                     \
                "   for p in $(git profiles); do "                              \
                "     cmd=\"${cmd}git profile $p $lsf; \";"                     \
                "   done; "                                                     \
                "else "                                                         \
                "   cmd=\"( git $lsf; \"; "                                     \
                "fi; "                                                          \
                "cmd=\"${cmd}\"')';"                                            \
                "eval $cmd; #"

    i-askpick = "!git i-splitl \"$@\" | cat -n && echo -n 'Pick the one to edit: ' #"

    i-dopick  = "!git i-askpick \"$@\" "                                        \
                "  && read PICK "                                               \
                "  && git i-fedit $(git i-splitl \"$@\" | sed -n $PICK'p') #"

    i-locked  = "!lsattr -d \"$1\" 2>/dev/null | grep -E '^....i.*' >/dev/null #"

    i-feditlk = "!chattr -i \"$1\"; "                          \
                "sudo -Eu \"$SUDO_USER\" \"$EDITOR\" \"$1\"; "  \
                "chattr +i \"$1\" #"

    i-fedit-l = "!if git i-locked \"$1\"; then "    \
                "  git i-sudo i-feditlk \"$1\"; "   \
                "else "                             \
                "  git i-fedit-n \"$1\"; "          \
                "fi #"

    i-fedit-n = "!$EDITOR \"$1\" #"

    i-fedit   = "!if [ \"$(git config dotfiles.lockFiles)\" = yes ]; then " \
                "  git i-fedit-l \"$1\"; "                                  \
                "else "                                                     \
                "  git i-fedit-n \"$1\"; "                                  \
                "fi #"

    i-edit    = "!if test $# -eq 1; "                                           \
                "  then git i-fedit \"$1\"; "                                   \
                "elif test $# -gt $(git config dotfiles.matchThreshold); then " \
                "  echo 'Too many dotfiles matching, restrict the pattern.'; "  \
                "elif test $# -gt 1; then "                                     \
                "  git i-dopick \"$@\"; "                                       \
                "fi #"

[core]
    repositoryformatversion = 0
    filemode = true
    excludesFile = "~/.config/dotgit/ignore"

[grep]
    lineNumber = true
    patternType = extended

[status]
    showUntrackedFiles = no
[remote "origin"]
	url = https://github.com/NikodemiusTKT/dot-git.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[submodule "/home/tkt/.vim_runtime/sources_non_forked/YouCompleteMe"]
	url = https://github.com/Valloric/YouCompleteMe
	active = true
[submodule ".vim_runtime/sources_non_forked/auto-pairs"]
	url = https://github.com/jiangmiao/auto-pairs
	active = true
[submodule ".vim_runtime/sources_non_forked/vim_unimpaired"]
	url = https://github.com/tpope/vim-unimpaired
	active = true
[submodule ".vim_runtime/sources_non_forked/vim-easymotion"]
	url = https://github.com/easymotion/vim-easymotion
	active = true
[submodule "/home/tkt/.vim_runtime/sources_non_forked/easyclip"]
	url = https://github.com/svermeulen/vim-easyclip.git
	active = true
[submodule "/home/tkt/.vim_runtime/sources_non_forked/closetag"]
	url = https://github.com/alvan/vim-closetag
	active = true
[submodule "/home/tkt/.vim_runtime/sources_non_forked/vim_husk"]
	url = https://github.com/vim-utils/vim-husk
	active = true
[submodule "/home/tkt/.vim_runtime/sources_non_forked/vim-tmux"]
	url = https://github.com/tmux-plugins/vim-tmux
	active = true
[submodule "/home/tkt/.vim_runtime/sources_non_forked/xmedit"]
	url = https://github.com/sukima/xmledit
	active = true
[submodule "/home/tkt/.vim_runtime/sources_non_forked/supertab"]
	url = https://github.com/ervandew/supertab
	active = true
[submodule "/home/tkt/.vim_runtime/sources_non_forked/tern_for_vim"]
	url = https://github.com/ternjs/tern_for_vim
	active = true
[submodule "/home/tkt/.vim_runtime/sources_non_forked/ultisnips"]
	url = https://github.com/SirVer/ultisnips
	active = true
[submodule "/home/tkt/.vim_runtime/sources_non_forked/vim-unimpaired"]
	url = https://github.com/tpope/vim-unimpaired
	active = true
[submodule "/home/tkt/.vim_runtime/sources_non_forked/vim-instant-markdown"]
	url = https://github.com/suan/vim-instant-markdown
	active = true
[submodule "/home/tkt/.vim_runtime/sources_non_forked/vim-geeknote"]
	url = https://github.com/neilagabriel/vim-geeknote
	active = true
